<@center><b><#selectbg_g>ENGLISH</#></b>

<@center><b><#selectbg_g>TheOneMemory Kernel</#></b>

<b><#selectbg_g>About Kernel Variants :</#></b></@>

<@fill><q>

OC : Overclocked Kernel
     (X00TD) 1.8 + 2.2GHz + 585MHz

Stock : Kernel with Stock Freq
        (X00TD) 1.6 + 1.8GHz + 430MHz

LV : For Android 11 and above which using LEDs Based
     Vibration driver. Don't flash on A10 or ROMs which
     still using Old QPNP Vibration driver else will
     bootloop.

NLV : Kernel for Android 9 (X00TD), 10, 11, 12, and 
      Stock ROM which using Old QPNP Vibration driver .
      Don't flash on ROMs with LEDs Based Vibration
      else Vibrate will Dead.
	  
What is EAS?

Energy Aware Scheduling (EAS) is an enhancement
to Linux power management, unifying CPU power
control under the Linux kernel. EAS extends the
Linux kernel scheduler to make it fully aware
of the power/performance capabilities of the
CPUs in the system, to optimize energy
consumption for advanced multi-core SoCs
including big.LITTLE. With EAS, the Linux kernel
will use the task load and a CPU ‘Energy Model’ to
control task placement to select the optimal
CPU to run on.

What is HMP ?

Heterogeneous Multi-Processing (HMP) This is the
standard load scheduler for any big.LITTLE device
released in recent years, other than the
Google Pixel. HMP makes use of the big.LITTLE
architecture, delegating low priority, less intensive
work to the little cores which consume less power.
HMP is “safe” wherein it knows what should go to the
big cores and what should go to the little cores,
without making mistakes. It just works and requires a
lot less effort to set up on the development side than
something like EAS, which we’ll get into in a moment.
HMP is just an extension of CFS to make it power aware.

HMP doesn’t take guesses, nor does it predict future
processes. This is good but is why the device cannot be
as fluid as those running EAS and is also why it consumes
slightly more battery. This, finally, brings us to
Energy Aware Scheduling (EAS), which I firmly believe is
the future in ROM and kernel development as more OEMs
adopt it.
</q></@>